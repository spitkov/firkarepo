name: Check IPA Release

on:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch:

jobs:
  check-ipa-releases:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT_TOKEN }}

      - id: check_releases
        run: |
          LATEST_RELEASE=$(curl -s "https://api.github.com/repos/QwIT-Development/app-legacy/releases/latest")
          
          if [ "$(echo $LATEST_RELEASE | jq -r 'if type=="object" then "yes" else "no" end')" != "yes" ]; then
            echo "is_new=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          TAG_NAME=$(echo $LATEST_RELEASE | jq -r .tag_name)
          PUBLISHED_AT=$(echo $LATEST_RELEASE | jq -r .published_at)
          IPA_ASSET=$(echo $LATEST_RELEASE | jq -r '.assets[]? | select(.name | endswith(".ipa"))')
          
          if [ -n "$IPA_ASSET" ]; then
            DOWNLOAD_URL=$(echo $IPA_ASSET | jq -r .browser_download_url)
            SIZE=$(echo "scale=2; $(echo $IPA_ASSET | jq -r .size)/1048576" | bc)
            VERSION_DATE=$(date -d "$PUBLISHED_AT" +"%Y-%m-%dT%H:%M:%S%z")
            
            if [ ! -f apps.json ]; then
              echo "is_new=true" >> $GITHUB_OUTPUT
            else
              LATEST_VERSION=$(jq -r '.apps[0].version // empty' apps.json)
              if [ "$TAG_NAME" != "$LATEST_VERSION" ]; then
                echo "is_new=true" >> $GITHUB_OUTPUT
              else
                echo "is_new=false" >> $GITHUB_OUTPUT
              fi
            fi
            
            echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT
            echo "published=$VERSION_DATE" >> $GITHUB_OUTPUT
            echo "download_url=$DOWNLOAD_URL" >> $GITHUB_OUTPUT
            echo "size=$SIZE" >> $GITHUB_OUTPUT
          else
            echo "is_new=false" >> $GITHUB_OUTPUT
          fi

      - if: steps.check_releases.outputs.is_new == 'true'
        run: |
          if [ ! -f apps.json ]; then
            echo '{"name":"Firka","identifier":"app.firka.legacy","sourceURL":"https://git.spitkov.hu/spitkov/firkaipa","apps":[]}' > apps.json
          fi
          
          NEW_ENTRY=$(jq -n \
            --arg tag "${{ steps.check_releases.outputs.tag }}" \
            --arg date "${{ steps.check_releases.outputs.published }}" \
            --arg url "${{ steps.check_releases.outputs.download_url }}" \
            --arg size "${{ steps.check_releases.outputs.size }}" \
            '{
              "name": "Firka",
              "bundleIdentifier": "app.firka.legacy",
              "developerName": "QwIT-Development",
              "version": $tag,
              "versionDate": $date,
              "versionDescription": "Egy alternatív e-KRÉTA app",
              "downloadURL": $url,
              "localizedDescription": "Firka App",
              "iconURL": "https://github.com/QwIT-Development/app-legacy/blob/master/refilc/assets/icons/ic_android.png?raw=true",
              "tintColor": "018084",
              "isLanZouCloud": 0,
              "size": ($size | tonumber),
              "type": 1
            }')
          
          echo "Adding new entry to apps.json"
          jq --argjson new "$NEW_ENTRY" '.apps = [$new] + .apps' apps.json > apps.json.tmp && mv apps.json.tmp apps.json
          
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add apps.json
          git commit -m "Update apps.json with new IPA release ${{ steps.check_releases.outputs.tag }}"
          git push